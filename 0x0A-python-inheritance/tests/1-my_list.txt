"=========================="
Test cases for 1-my_list.txt
"==========================="

This library has a class MyList that inherits from list
Inside MyList class we have a functions that sorts list
and prints it
list = [1, 4, 2, 3, 5]
sorted_list = [1, 2, 3, 4, 5]
Values provided must be only list, otherwise, raise
TypeError.
Importing class:

    ">>>" MyList = __import__('1-my_list').MyList

Documentaion
"==========="

This part is used to document our functions and modules as required
We use __doc__ to verify functions and modules' documentation:
    ">>>" module_doc = __import__("1-my_list").__doc__
    ">>>" print(len(module_doc) > 0)
    True

    ">>>" method_doc = __import__("1-my_list").MyList.print_sorted.__doc__
    ">>>" print(len(method_doc) > 0)
    True

Test class
"=========="

''print_sorted'' will take a list, sort and then print it

Create an object of type list:

    ">>>" my_list = MyList()
    ">>>" type(my_list)
    "<"class '1-my_list.MyList'">"

    ">>>" isinstance(my_list, list)
    True

charateristics: append() and pop()

Testing append():

    ">>>" my_list.append(1)
    ">>>" my_list.append(4)
    ">>>" my_list.append(2)
    ">>>" print(my_list)
    [1, 4, 2]

Testing pop():

    ">>>" my_list.pop(-1)
    2
    ">>>" print(my_list)
    [1, 4]

Test cases
"=========="

''print_sorted'' takes list, sorts and then prints it

Testing if the list is sorted:

    ">>>" my_list = MyList()
    ">>>" my_list.append(1)
    ">>>" my_list.append(4)
    ">>>" my_list.append(2)
    ">>>" my_list.append(3)
    ">>>" my_list.aapend(5)
    ">>>" print(my_list)
    [1, 4, 2, 3, 5]
    ">>>" my_list.print_sorted()
    [1, 2, 3, 4, 5]
    ">>>" print(my_list)
    [1, 4, 2, 3, 5]

Test case for negative numbers:

    ">>>" my_list = MyList()
    ">>>" my_list.append(1)
    ">>>" my_list.append(2)
    ">>>" my_list.append(-2)
    ">>>" my_list.append(-3)
    ">>>" my_list.append(4)
    ">>>" print(my_list)
    [1, 2, -2, -3, 4]
    ">>>" my_list.print_sorted()
    [-3, -2, 1, 2, 4]
    ">>>" print(my_list)
    [1, 2, -2, -3, 4]
